name: Build PineTime Firmware

# When to run this Workflow...
on:

  # Run this Workflow when files are updated (Pushed) in this Branch
  push:
    branches: [ owo ]
    
  # Also run this Workflow when a Pull Request is created or updated in this Branch
  pull_request:
    branches: [ owo ]

# Steps to run for the Workflow
jobs:
  build:

    # Run these steps on Ubuntu
    runs-on: ubuntu-latest

    steps:
        
    #########################################################################################
    # Checkout
      
    - name: Checkout source files
      uses: actions/checkout@v2

    - name: Check cache for newt
      id:   cache-newt
      uses: actions/cache@v2
      env:
        cache-name: cache-newt
      with:
        path: ${{ runner.temp }}/mynewt-newt
        key:  ${{ runner.os }}-build-${{ env.cache-name }}
        restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}

    - name: Install newt
      if:   steps.cache-newt.outputs.cache-hit != 'true'  # Install newt if not found in cache
      run:  |
        cd ${{ runner.temp }}
        git clone --branch mynewt_1_7_0_tag https://github.com/apache/mynewt-newt/
        cd mynewt-newt/
        ./build.sh
        newt/newt version
        export PATH=$PATH:${{ runner.temp }}/mynewt-newt/newt
        newt version

    - name: Show files
      run:  set ; pwd ; ls -l

    - name: Check cache for Embedded Arm Toolchain arm-none-eabi-gcc
      id:   cache-toolchain
      uses: actions/cache@v2
      env:
        cache-name: cache-toolchain-9-2020-q2
      with:
        path: ${{ runner.temp }}/arm-none-eabi
        key:  ${{ runner.os }}-build-${{ env.cache-name }}
        restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}

    - name: Install Embedded Arm Toolchain arm-none-eabi-gcc
      if:   steps.cache-toolchain.outputs.cache-hit != 'true'  # Install toolchain if not found in cache
      uses: fiam/arm-none-eabi-gcc@v1.0.2
      with:
        # GNU Embedded Toolchain for Arm release name, in the V-YYYY-qZ format (e.g. "9-2019-q4")
        release: 9-2020-q2
        # Directory to unpack GCC to. Defaults to a temporary directory.
        directory: ${{ runner.temp }}/arm-none-eabi

    - name: Build Application Firmware
      run:  |
        export PATH=$PATH:${{ runner.temp }}/mynewt-newt/newt:${{ runner.temp }}/arm-none-eabi/bin
        ./scripts/ci-build.sh
    - name: Upload Application Firmware
      uses: actions/upload-artifact@v2
      with:
        name: KittehWatchOS-newt.elf
        path: bin/targets/KittehWatchOS-newt/app/apps/KittehWatchOS-newt/KittehWatchOS-newt.elf

    - name: Upload Application Firmware Image
      uses: actions/upload-artifact@v2
      with:
        name: KittehWatchOS-newt.img
        path: bin/targets/KittehWatchOS-newt/app/apps/KittehWatchOS-newt/KittehWatchOS-newt.img

    - name: Upload Application Firmware Outputs
      uses: actions/upload-artifact@v2
      with:
        name: KittehWatchOS-newt.zip
        path: bin/targets/KittehWatchOS-newt/app/apps/KittehWatchOS-newt/KittehWatchOS-newt.*

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./bin/targets/KittehWatchOS-newt/app/apps/KittehWatchOS-newt/KittehWatchOS-newt.img
          asset_name: KittehWatchOS-newt.img
          asset_content_type: application/octet-stream
